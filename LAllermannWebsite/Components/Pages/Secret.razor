@page "/secret"
@rendermode InteractiveServer
@using System.Diagnostics
@inject IUserAuthenticationService AuthenticationService
@inject Microsoft.AspNetCore.Components.Authorization.AuthenticationStateProvider AuthenticationStateProvider
<PageTitle>Secret</PageTitle>

<h1>Hello, to the Secret Site!</h1>
<AuthorizeView>
	<Authorized >
		<p>This is a secret page that only logged in users can see.</p>
		<span>Logged in as <b>@context.User.Identity.Name</b></span>
		<p>Your token is <b>@context.User.FindFirst("Token")?.Value</b></p>
	</Authorized>
	<NotAuthorized>
		<p>You are not authorized to see this page.</p>
	</NotAuthorized>
</AuthorizeView>

<AuthorizeView Policy="Admin">
	<Authorized>
		<p>You are an admin</p>"
	</Authorized>
	<NotAuthorized>
		<p>You are not a admin</p>
	</NotAuthorized>
</AuthorizeView>
<AuthorizeView Policy="User">
	<Authorized>
		<p>You are a user</p>
	</Authorized>
	<NotAuthorized>
		<p>You are not a user</p>
	</NotAuthorized>
</AuthorizeView>

<button type="button" class="btn btn-primary" @onclick="OnButtonPress">Login</button>
@code {

	[CascadingParameter]
	public HttpContext? HttpContext { get; set; }

	public async Task OnButtonPress()
	{
		
		await AuthenticationStateProvider.GetAuthenticationStateAsync();
		StateHasChanged();
	}
}
