@page "/login"
@using LAllermannWebsite.Models.ViewModels
@using System.Diagnostics
@using System.Security.Claims
@using System.Text.Json
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies

@inject IUserAuthenticationService UserAuthenticationService
@inject NavigationManager NavigationManager

<h3>Login</h3>
<div class="row">
	<div class="col-md-4">
		<EditForm method="post" Model="@Model" OnValidSubmit="OnValidSubmit" FormName="LoginForm">
			
			<div class="form-group">
				<label for="Username">Username</label>
				<InputText id="Username" class="form-control" @bind-Value="Model.Username" />
				<ValidationMessage For="@(() => Model.Username)" />
			</div>
			<div class="form-group">
				<label for="Password">Password</label>
				<InputText id="Password" class="form-control" @bind-Value="Model.Password" />
				<ValidationMessage For="@(() => Model.Password)" />
			</div>
			<div class="mb-3 text-center">
				<span class="text-danger">@errorMessage</span>
			</div>
			<button type="submit" class="btn btn-primary">Login</button>
		</EditForm>
	</div>
</div>

@code {

	[CascadingParameter]
	public HttpContext? HttpContext { get; set; }

	[SupplyParameterFromForm]
	public LoginViewModel Model { get; set; } = new();
	private string? errorMessage = "";
	private async Task OnValidSubmit()
	{
		try
		{
			await UserAuthenticationService.SignIn(Model.Username, Model.Password);
		}
		catch(Exception ex)
		{
			errorMessage = ex.Message;
			Debug.WriteLine(ex.Message);
			Debug.WriteLine(ex.StackTrace);
		}
		NavigationManager.NavigateTo("/secret");
	}
}
